{
	"name": "smartopen",
	"displayName": "%displayName%",
	"description": "%description%",
	"version": "1.5.0",
	"engines": {
		"vscode": "^1.32.0"
	},
	"publisher": "smartytomato",
	"categories": [
		"Other"
	],
	"icon": "resources/img/logo.png",
	"repository": "https://github.com/SmartyTomato/SmartOpen/",
	"activationEvents": [
		"onCommand:smartOpen.syncActiveDocument",
		"onCommand:smartOpen.openRelatedFile",
		"onView:pinnedDocument"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [{
				"command": "smartOpen.syncActiveDocument",
				"title": "%contributes.commands.smartOpen.syncActiveDocument%",
				"category": "smartOpen.syncActiveDocument",
				"icon": {
					"light": "resources/light/locate.png",
					"dark": "resources/dark/locate.png"
				}
			},
			{
				"command": "smartOpen.openRelatedFile",
				"title": "%contributes.commands.smartOpen.openRelatedFile%",
				"category": "smartOpen.openRelatedFile"
			},
			{
				"command": "smartOpen.pinnedDocument.pin",
				"title": "%contributes.commands.smartOpen.pinnedDocument.pin%",
				"category": "smartOpen.pinnedDocument"
			},
			{
				"command": "smartOpen.pinnedDocument.unpin",
				"title": "%contributes.commands.smartOpen.pinnedDocument.unpin%",
				"category": "smartOpen.pinnedDocument"
			},
			{
				"command": "smartOpen.pinnedDocument.quickPick",
				"title": "%contributes.commands.smartOpen.pinnedDocument.quickPick%",
				"category": "smartOpen.pinnedDocument"
			},
			{
				"command": "smartOpen.pinnedDocument.open",
				"title": "%contributes.commands.smartOpen.pinnedDocument.open%",
				"category": "smartOpen.pinnedDocument"
			},
			{
				"command": "smartOpen.pinnedDocument.remove",
				"title": "%contributes.commands.smartOpen.pinnedDocument.remove%",
				"category": "smartOpen.pinnedDocument"
			},
			{
				"command": "smartOpen.pinnedDocument.openAll",
				"title": "%contributes.commands.smartOpen.pinnedDocument.openAll%",
				"icon": {
					"light": "resources/light/open-all.png",
					"dark": "resources/dark/open-all.png"
				},
				"category": "smartOpen.pinnedDocument"
			},
			{
				"command": "smartOpen.pinnedDocument.clearAll",
				"title": "%contributes.commands.smartOpen.pinnedDocument.clearAll%",
				"icon": {
					"light": "resources/light/clear-all.png",
					"dark": "resources/dark/clear-all.png"
				},
				"category": "smartOpen.pinnedDocument"
			},
			{
				"command": "smartOpen.pinnedDocument.sortByName",
				"title": "%contributes.commands.smartOpen.pinnedDocument.sortByName%",
				"category": "smartOpen.pinnedDocument"
			},
			{
				"command": "smartOpen.pinnedDocument.sortByType",
				"title": "%contributes.commands.smartOpen.pinnedDocument.sortByType%",
				"category": "smartOpen.pinnedDocument"
			}
		],
		"keybindings": [{
				"command": "smartOpen.syncActiveDocument",
				"key": "ctrl+alt+;",
				"when": "editorTextFocus && config.smartOpen.syncActiveDocument.enabled"
			},
			{
				"command": "smartOpen.openRelatedFile",
				"key": "ctrl+;",
				"when": "editorTextFocus && config.smartOpen.openRelatedFile.enabled"
			},
			{
				"command": "smartOpen.pinnedDocument.pin",
				"key": "ctrl+'",
				"when": "editorTextFocus && config.smartOpen.pinnedDocument.enabled"
			},
			{
				"command": "smartOpen.pinnedDocument.unpin",
				"key": "ctrl+shift+'",
				"when": "editorTextFocus && config.smartOpen.pinnedDocument.enabled"
			},
			{
				"command": "smartOpen.pinnedDocument.quickPick",
				"key": "ctrl+alt+'",
				"when": "config.smartOpen.pinnedDocument.enabled"
			},
			{
				"command": "smartOpen.pinnedDocument.openAll",
				"key": "ctrl+shift+alt+",
				"when": "config.smartOpen.pinnedDocument.enabled"
			}
		],
		"views": {
			"explorer": [{
				"id": "pinnedDocument",
				"name": "%contributes.views.explorer.pinnedDocument%",
				"when": "config.smartOpen.pinnedDocument.enabled"
			}]
		},
		"menus": {
			"editor/title": [{
				"command": "smartOpen.syncActiveDocument",
				"group": "navigation",
				"when": "config.smartOpen.syncActiveDocument.enabled"
			}],
			"editor/title/context": [{
					"command": "smartOpen.pinnedDocument.pin",
					"group": "navigation@0",
					"when": "config.smartOpen.pinnedDocument.enabled"
				},
				{
					"command": "smartOpen.pinnedDocument.unpin",
					"group": "navigation@1",
					"when": "config.smartOpen.pinnedDocument.enabled"
				},
				{
					"command": "smartOpen.openRelatedFile",
					"group": "navigation@3",
					"when": "config.smartOpen.openRelatedFile.enabled"
				}
			],
			"view/item/context": [{
				"command": "smartOpen.pinnedDocument.remove",
				"group": "smartOpen.pinnedDocument.action",
				"when": "view == pinnedDocument"
			}],
			"view/title": [{
					"command": "smartOpen.pinnedDocument.openAll",
					"group": "navigation@0",
					"when": "view == pinnedDocument"
				},
				{
					"command": "smartOpen.pinnedDocument.clearAll",
					"group": "navigation@1",
					"when": "view == pinnedDocument"
				},
				{
					"command": "smartOpen.pinnedDocument.sortByName",
					"group": "smartOpen.pinnedDocument.action.sort@0",
					"when": "view == pinnedDocument"
				},
				{
					"command": "smartOpen.pinnedDocument.sortByType",
					"group": "smartOpen.pinnedDocument.action.sort@1",
					"when": "view == pinnedDocument"
				}
			]
		},
		"configuration": [{
			"title": "Smart Open",
			"properties": {
				"smartOpen.syncActiveDocument.enabled": {
					"type": "boolean",
					"default": true,
					"description": "Enable sync with explorer"
				},
				"smartOpen.openRelatedFile.enabled": {
					"type": "boolean",
					"default": true,
					"description": "Enable open related file"
				},
				"smartOpen.pinnedDocument.enabled": {
					"type": "boolean",
					"default": true,
					"description": "Enable pinned document panel"
				},
				"smartOpen.pinnedDocument.maintainPinnedDocuments": {
					"type": "boolean",
					"default": true,
					"description": "Should pinned documents maintained from last session after workspace closed"
				},
				"smartOpen.pinnedDocument.maintainSortOrder": {
					"type": "boolean",
					"default": false,
					"description": "Should maintain sort order for pinned document"
				},
				"smartOpen.pinnedDocument.sortBy": {
					"type": "string",
					"default": "name",
					"examples": [
						"name",
						"type"
					],
					"description": "How the pinned documents should be sorted when `smartOpen.pinnedDocument.maintainSortOrder` is enabled"
				},
				"smartOpen.openRelatedFile.activatedTags": {
					"type": "array",
					"items": {
						"tags": {
							"type": "string",
							"examples": [
								"all",
								"default"
							],
							"description": "Rule tags"
						}
					},
					"uniqueItems": true,
					"default": [
						"all"
					],
					"description": "Activated rule's tags used for calculate related files. Use `all` apply all rules in the settings"
				},
				"smartOpen.openRelatedFile.fileFilters": {
					"type": "array",
					"items": {
						"ignored": {
							"type": "string",
							"description": "RegExp string use to check file name, full path and relative path"
						}
					},
					"uniqueItems": true,
					"default": [
						"*",
						"*.ts",
						"*.cs",
						"*.xml",
						"*.h",
						"*.cpp",
						"*.json",
						"*.html",
						"*.css",
						"*.less",
						"*.sass",
						"*.js"
					],
					"description": "(Remove) first item to Enable. Only include file name, full path and relative path with the given regexp, add this to significant reduce the calculation time"
				},
				"smartOpen.openRelatedFile.ignoredFiles": {
					"type": "array",
					"items": {
						"ignored": {
							"type": "string",
							"description": "RegExp string use to check file name, full path and relative path"
						}
					},
					"uniqueItems": true,
					"default": [
						".*",
						"__.*",
						"node_modules",
						"[Dd]ebug",
						"[Bb]in",
						"[Bb]uild",
						"[Rr]elease",
						"[Ll]og",
						"[Dd]ist",
						"out",
						"coverages"
					],
					"description": "Ignored search path, add this to significant reduce the calculation time"
				},
				"smartOpen.openRelatedFile.rules.builtIn": {
					"type": "array",
					"items": {
						"type": "object"
					},
					"description": "Builtin rules. Use as you wish, just add tag into activated tags. Don't edit this. Add in `rules.custom` instead",
					"default": [{
							"tags": [
								"Default"
							],
							"order": 999,
							"breakChars": [
								"-",
								"_",
								".",
								"{Cap}"
							],
							"expressions": [
								"{-2}.{1}"
							]
						},
						{
							"tags": [
								"Angular"
							],
							"order": 11,
							"breakChars": [
								"-",
								"."
							],
							"expressions": [
								"{1}.component.*",
								"{1}.service.ts",
								"{1}.model.ts"
							]
						},
						{
							"tags": [
								"Angular"
							],
							"order": 12,
							"breakChars": [
								"-",
								"."
							],
							"expressions": [
								"{1}.{-2}.*"
							]
						},
						{
							"tags": [
								"Javascript"
							],
							"order": 11,
							"breakChars": [
								"-"
							],
							"expressions": [
								"{1}.*"
							]
						},
						{
							"tags": [
								"Javascript",
								"Javascript Test"
							],
							"order": 11,
							"breakChars": [
								"-",
								"."
							],
							"expressions": [
								"{1}.spec.*"
							]
						},
						{
							"tags": [
								"C#",
								"C# Interface"
							],
							"order": 11,
							"breakChars": [
								"{Cap}"
							],
							"expressions": [
								"I{1}.cs",
								"{1}.cs"
							]
						},
						{
							"tags": [
								"C#",
								"C# Test"
							],
							"order": 12,
							"breakChars": [
								"{Cap}"
							],
							"expressions": [
								"{1}Test.cs",
								"{1}Tests.cs",
								"{1}.cs"
							]
						},
						{
							"tags": [
								"C#",
								"C# Controller, Logic, Repository"
							],
							"order": 12,
							"breakChars": [
								"{Cap}"
							],
							"expressions": [
								"{1}Controller.cs",
								"{1}Logic.cs",
								"{1}Repository.cs"
							]
						},
						{
							"tags": [
								"C++"
							],
							"order": 12,
							"breakChars": [
								"{Cap}"
							],
							"expressions": [
								"{1}.h",
								"{1}.cpp"
							]
						}
					]
				},
				"smartOpen.openRelatedFile.rules.custom": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"tags": {
								"type": "array",
								"items": {
									"type": "string"
								},
								"uniqueItems": true,
								"description": "Array of string tags use to identify the rule. Usually has two `language` (like Javascript) and `function` (like angular)"
							},
							"order": {
								"type": "integer",
								"default": 10,
								"description": "Result will show in this order. Smaller number will show first.If number large than 100, the result will in alphabetic order"
							},
							"breakChars": {
								"type": "array",
								"items": {
									"type": "string",
									"examples": [
										"-",
										"_",
										".",
										"{Cap}"
									]
								},
								"uniqueItems": true,
								"default": [
									"-",
									"_",
									".",
									"{Cap}"
								],
								"description": "The character that breaks in the file name into segments"
							},
							"expressions": {
								"type": "array",
								"items": {
									"type": "string"
								},
								"description": "Expressions to match file names, see built in as example. {1} exact match. {-2} relative match, Test1 and Test = {-1}. Test1 and Test2 = {-2}. - matching is very slow"
							}
						},
						"required": [
							"tags",
							"expressions",
							"breakChars",
							"order"
						],
						"description": "Rule object"
					},
					"description": "Custom rules. Don't forget add this into activatedTags to enable it"
				}
			}
		}]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"test": "npm run compile && node ./node_modules/vscode/bin/test"
	},
	"devDependencies": {
		"@types/mocha": "^2.2.42",
		"@types/node": "^10.14.4",
		"tslint": "^5.12.1",
		"typescript": "^3.3.1",
		"vscode": "^1.1.28"
	},
	"dependencies": {}
}
